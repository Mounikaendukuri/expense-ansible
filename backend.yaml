- name: configure backend service
  hosts: backend
  become: yes
  vars:
    login_host: backend.mounikadaws.online
    root_password: ExpenseApp@1
  tasks:
  - name: disable default nodejs
    ansible.biultin.command: dnf module disable nodejs -y
  - name: enable nodejs_20
    ansible.builtin.command: dnf enable nodejs:20 -y
  - name : install nodejs
    ansible.biultin.dnf: # only works for redhat
      name : "{{ item }}"
      state: installed
      loop:
      - nodejs
      - mysql
  - name : create expense user
    ansible.builtin.user:
      name: expense
  - name : create app directory
    ansible.builtin.file:
      path : /app
      state: directory
  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  
  - name: unzip backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip # default checks in anisble server
      dest: /app
      remote_src: yes
  - name: install npm dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install python mysql dependencies
    ansible.builtin.pip:
      name:
      - pyMYSQL # to connect MySQL DB from Ansible
      - crypthography
      executable"pip3.9 # pip3.11 if python version is 3.11

  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: import
      name: all

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable backend service
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes